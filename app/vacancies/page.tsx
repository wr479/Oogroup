"use client";
import { Button } from "@/components/ui/button";
import { Reveal } from "@/components/ui/reveal";
import { HeroSection } from "@/components/site/hero-section";
import Image from "next/image";

export default function VacanciesPage() {
  return (
    <div className="min-h-dvh flex flex-col bg-background">
      <main className="flex-1">
        {/* Hero Section —Å–æ–≥–ª–∞—Å–Ω–æ –¥–∏–∑–∞–π–Ω—É Figma */}
        <HeroSection 
          title="–í–∞–∫–∞–Ω—Å–∏–∏ –∏ –∫–∞—Ä—å–µ—Ä–∞ –≤ Ojok"
          description="–ú—ã ‚Äî –ª–∏–¥–µ—Ä –≤ —Å—Ñ–µ—Ä–µ –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥–∞ –ø—Ä–æ–¥–∞–∂, –∏—â–µ–º –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –∏ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞. –°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞!"
          primaryButtonText="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
          secondaryButtonText="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏"
          primaryButtonHref="#contact-form"
          secondaryButtonHref="#vacancies"
          mobileImage="/hero/3.png"
          mobileImageAlt="–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ Ojok"
        />

        {/* –°–µ–∫—Ü–∏—è "–ö–∞—Ä—å–µ—Ä–∞ –≤ Ojok: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ —É—Å–ª–æ–≤–∏—è" */}
        <section className="py-20 bg-gradient-to-br from-slate-50 to-white">
          <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-16">
              <h2 className="text-4xl font-bold text-slate-900 mb-6">
                –ö–∞—Ä—å–µ—Ä–∞ –≤ Ojok: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ —É—Å–ª–æ–≤–∏—è
              </h2>
              <p className="text-xl text-slate-700 max-w-4xl mx-auto leading-relaxed">
                –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ Ojok –∏ —Ä–∞—Å—Ç–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –ª–∏–¥–µ—Ä–æ–º –≤ —Å—Ñ–µ—Ä–µ –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥–∞ –ø—Ä–æ–¥–∞–∂. 
                –£ –Ω–∞—Å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è.
              </p>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
            <div className="grid lg:grid-cols-2 gap-12 mb-16 items-stretch">
              {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
              <div className="relative h-full">
                <Image
                  src="/laptop/1.png"
                  alt="–ö–æ–º–∞–Ω–¥–∞ Ojok –∑–∞ —Ä–∞–±–æ—Ç–æ–π"
                  width={600}
                  height={400}
                  className="w-full h-full object-cover rounded-2xl shadow-2xl"
                />
                
              </div>

              {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
              <div className="space-y-8">
                <div className="bg-white p-6 rounded-xl shadow-lg border-l-4 border-red-500">
                  <h3 className="text-xl font-bold text-slate-900 mb-3">üí∞ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞</h3>
                  <p className="text-slate-700">
                    –û—Ç 35 000 –¥–æ 40 000 ‚ÇΩ –Ω–∞ —Ä—É–∫–∏ + –ø—Ä–µ–º–∏–∏ –∏ –±–æ–Ω—É—Å—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è. 
                    –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–æ–≤—ã—à–µ–Ω–∏—è –∏ —Å–∏—Å—Ç–µ–º–∞ –≥—Ä–µ–π–¥–æ–≤.
                  </p>
                </div>

                <div className="bg-white p-6 rounded-xl shadow-lg border-l-4 border-red-500">
                  <h3 className="text-xl font-bold text-slate-900 mb-3">üè† –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞</h3>
                  <p className="text-slate-700">
                    –†–∞–±–æ—Ç–∞–π—Ç–µ –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –†–æ—Å—Å–∏–∏. –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –æ—Ç 6 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å. 
                    –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–±–æ–∫ –∏ –ø–æ–µ–∑–¥–æ–∫ –≤ –æ—Ñ–∏—Å.
                  </p>
                </div>

                <div className="bg-white p-6 rounded-xl shadow-lg border-l-4 border-red-500">
                  <h3 className="text-xl font-bold text-slate-900 mb-3">üìö –û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ</h3>
                  <p className="text-slate-700">
                    –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ, –∫–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç. 
                    –†–∞–∑–≤–∏—Ç–∏–µ soft –∏ hard skills –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* –°–µ–∫—Ü–∏—è "–í–∞–∫–∞–Ω—Å–∏–∏" */}
        <section id="vacancies" className="py-20 bg-slate-50">
          <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <h2 className="text-4xl font-bold text-slate-900 text-center mb-16">–í–∞–∫–∞–Ω—Å–∏–∏</h2>
            
            <div className="grid lg:grid-cols-2 gap-8">
              {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ 1 */}
              <div className="bg-white rounded-2xl p-8 shadow-xl border border-slate-200">
                <h3 className="text-2xl font-bold text-slate-900 mb-6">–û–ø–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –≤—Ö–æ–¥—è—â—É—é –ª–∏–Ω–∏—é</h3>
                
                {/* –î–µ—Ç–∞–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ */}
                <div className="space-y-4 mb-6">
                  <div className="flex items-center gap-3">
                    <svg className="w-5 h-5 text-slate-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                    </svg>
                    <span className="text-slate-700">–§–æ—Ä–º–∞—Ç: –£–¥–∞–ª—ë–Ω–Ω–æ</span>
                  </div>
                  
                  <div className="flex items-center gap-3">
                    <svg className="w-5 h-5 text-slate-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                    </svg>
                    <span className="text-slate-700">–ó–∞—Ä–ø–ª–∞—Ç–∞: 35 000 - 40 000 ‚ÇΩ</span>
                  </div>
                  
                  <div className="flex items-center gap-3">
                    <svg className="w-5 h-5 text-slate-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    <span className="text-slate-700">–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è</span>
                  </div>
                  
                  <div className="flex items-center gap-3">
                    <svg className="w-5 h-5 text-slate-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3a4 4 0 011.5-3.5M8 7V5a2 2 0 012-2h4a2 2 0 012 2v2m0 0V3a4 4 0 00-1.5-3.5M8 7v10a2 2 0 002 2h4a2 2 0 002-2V7" />
                    </svg>
                    <span className="text-slate-700">–ì—Ä–∞—Ñ–∏–∫: 5/2, 6/1, –≥–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ (–æ—Ç 6 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å)</span>
                  </div>
                </div>

                {/* –ß—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å */}
                <div className="mb-6">
                  <h4 className="font-semibold text-slate-900 mb-3">–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å:</h4>
                  <p className="text-slate-700 text-sm leading-relaxed">
                    –ü—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ –æ—Ç –∂–∏—Ç–µ–ª–µ–π –†–æ—Å—Å–∏–∏ –ø–æ –≥–æ—Ç–æ–≤–æ–º—É —Å—Ü–µ–Ω–∞—Ä–∏—é. 
                    –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–¥–∞–∂ ‚Äî —Ç–æ–ª—å–∫–æ –≥–æ—Ä—è—á–∞—è –≤—Ö–æ–¥—è—â–∞—è –ª–∏–Ω–∏—è.
                  </p>
                 
                </div>

                {/* –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ */}
                <div className="mb-6">
                  <h4 className="font-semibold text-slate-900 mb-3">–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</h4>
                  <p className="text-slate-700 text-sm leading-relaxed">
                    –û–∫–ª–∞–¥ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç–∞–≤–∫–µ –æ—Ç 32 000 —Ä—É–±–ª–µ–π –Ω–∞ —Ä—É–∫–∏ –ø–ª—é—Å –ø—Ä–µ–º–∏–∏ –∏ –±–æ–Ω—É—Å—ã. 
                    –ì—Ä–µ–π–¥ ‚Äî –ø–æ–≤—ã—à–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É–≥–æ–¥–∞ —Ä–∞–±–æ—Ç—ã –∏ —É—Å–ø–µ—à–Ω–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞.
                  </p>
                
                </div>

                {/* –ß—Ç–æ –º—ã —Ö–æ—Ç–∏–º –æ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ */}
                <div className="mb-8">
                  <h4 className="font-semibold text-slate-900 mb-3">–ß—Ç–æ –º—ã —Ö–æ—Ç–∏–º –æ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:</h4>
                  <p className="text-slate-700 text-sm leading-relaxed">
                    –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –º–Ω–æ–≥–æ –æ–±—â–∞—Ç—å—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É. –°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.
                  </p>
               
                </div>

                <Button 
                  className="w-full bg-red-600 hover:bg-red-700 text-white py-4 text-lg font-semibold rounded-xl"
                  onClick={() => {
                    const contactForm = document.querySelector('#contact-form');
                    if (contactForm) {
                      contactForm.scrollIntoView({ behavior: 'smooth' });
                    }
                  }}
                >
                  –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                </Button>
              </div>

              {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ 2 */}
             
            </div>
          </div>
        </section>

        {/* –°–µ–∫—Ü–∏—è "–°–í–Ø–ñ–ò–¢–ï–°–¨ –° –ù–ê–ú–ò –°–ï–ô–ß–ê–°" */}
        <section id="contact-form" className="py-20 bg-white">
          <div className="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-4xl font-bold text-slate-900 mb-4">
                –°–í–Ø–ñ–ò–¢–ï–°–¨ –° –ù–ê–ú–ò –°–ï–ô–ß–ê–°
              </h2>
              <p className="text-lg text-slate-700">
                –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
              </p>
            </div>

            <div className="bg-slate-50 rounded-2xl p-8 shadow-xl">
              <form id="contactForm" className="space-y-6">
                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      –§–ò–û *
                    </label>
                    <input
                      name="name"
                      type="text"
                      required
                      placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                      className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *
                    </label>
                    <input
                      id="phone"
                      name="phone"
                      type="tel"
                      required
                      placeholder="+7"
                      className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    />
                  </div>
                </div>

                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      Telegram
                    </label>
                    <input
                      name="telegram"
                      type="text"
                      placeholder="Telegram"
                      className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ *
                    </label>
                    <input
                      name="citizenship"
                      type="text"
                      required
                      placeholder="–†–æ—Å—Å–∏—è"
                      className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    />
                  </div>
                </div>

                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
                    </label>
                    <input
                      name="experience"
                      type="text"
                      placeholder="–ë–µ–∑ –æ–ø—ã—Ç–∞"
                      className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      Email
                    </label>
                    <input
                      id="email"
                      name="email"
                      type="email"
                      placeholder="ivanov@example.com"
                      className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-slate-700 mb-2">
                    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                  </label>
                  <textarea
                    name="comment"
                    rows={4}
                    placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
                    className="w-full px-4 py-3 border border-slate-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent resize-none"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-slate-700 mb-2">
                    –†–µ–∑—é–º–µ
                  </label>
                  <div className="border-2 border-dashed border-slate-300 rounded-xl p-6 text-center hover:border-red-400 transition-colors">
                    <input
                      type="file"
                      name="resume"
                      id="resume"
                      accept=".pdf,.doc,.docx,.txt"
                      className="hidden"
                      onChange={(e) => {
                        const fileName = e.target.files?.[0]?.name;
                        if (fileName) {
                          const labelElement = document.getElementById('resumeLabel');
                          const iconElement = document.getElementById('resumeIcon');
                          if (labelElement && iconElement) {
                            labelElement.textContent = fileName;
                            iconElement.className = 'w-6 h-6 text-green-500';
                          }
                        }
                      }}
                    />
                    <label htmlFor="resume" className="cursor-pointer">
                      <div className="flex items-center justify-center gap-3">
                        <svg id="resumeIcon" className="w-6 h-6 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                        </svg>
                        <span id="resumeLabel" className="text-slate-600 font-medium">–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª</span>
                      </div>
                      <p className="text-sm text-slate-500 mt-2">PDF, DOC, DOCX –∏–ª–∏ TXT –¥–æ 5MB</p>
                    </label>
                  </div>
                </div>

                {/* –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
                <div id="status" className="hidden p-4 rounded-xl text-center font-medium"></div>

                <Button 
                  id="submitBtn"
                  type="submit" 
                  className="w-full bg-red-600 hover:bg-red-700 text-white py-4 text-lg font-semibold rounded-xl disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                </Button>
              </form>
            </div>
          </div>
        </section>

        {/* –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ axios –∏ —Å–∫—Ä–∏–ø—Ç —Ñ–æ—Ä–º—ã */}
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script dangerouslySetInnerHTML={{
          __html: `
            const webhookUrl = 'https://core.emfy.com/widgets/webhooks/?module=site_integration&amo_account_id=31802054&hook_id=MTc1NTg1MzQ5Nzg3NTExMTYyNDEw';
            
            // –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            function initPhoneMask() {
                const phoneInput = document.getElementById('phone');
                if (!phoneInput) return;
                
                let cursorPosition = 0;
                
                phoneInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\\D/g, '');
                    let formattedValue = '';
                    
                    if (value.length > 0) {
                        if (value.length <= 1) {
                            formattedValue = '+7 (' + value;
                        } else if (value.length <= 4) {
                            formattedValue = '+7 (' + value.substring(0, 3) + ') ' + value.substring(3);
                        } else if (value.length <= 7) {
                            formattedValue = '+7 (' + value.substring(0, 3) + ') ' + value.substring(3, 6) + '-' + value.substring(6);
                        } else if (value.length <= 9) {
                            formattedValue = '+7 (' + value.substring(0, 3) + ') ' + value.substring(3, 6) + '-' + value.substring(6, 8) + '-' + value.substring(8);
                        } else {
                            formattedValue = '+7 (' + value.substring(0, 3) + ') ' + value.substring(3, 6) + '-' + value.substring(6, 8) + '-' + value.substring(8, 10);
                        }
                    }
                    
                    e.target.value = formattedValue;
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞
                    if (cursorPosition < formattedValue.length) {
                        e.target.setSelectionRange(cursorPosition, cursorPosition);
                    }
                });
                
                phoneInput.addEventListener('keydown', function(e) {
                    cursorPosition = e.target.selectionStart;
                });
                
                phoneInput.addEventListener('focus', function(e) {
                    if (!e.target.value) {
                        e.target.value = '+7 (';
                    }
                });
                
                phoneInput.addEventListener('blur', function(e) {
                    if (e.target.value === '+7 (') {
                        e.target.value = '';
                    }
                });
            }
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è email
            function initEmailValidation() {
                const emailInput = document.getElementById('email');
                if (!emailInput) return;
                
                emailInput.addEventListener('blur', function(e) {
                    const email = e.target.value;
                    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;
                    
                    if (email && !emailRegex.test(email)) {
                        e.target.classList.add('border-red-500', 'focus:border-red-500');
                        e.target.classList.remove('border-slate-300', 'focus:border-red-500');
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                        let errorDiv = e.target.parentNode.querySelector('.email-error');
                        if (!errorDiv) {
                            errorDiv = document.createElement('div');
                            errorDiv.className = 'email-error text-red-500 text-sm mt-1';
                            e.target.parentNode.appendChild(errorDiv);
                        }
                        errorDiv.textContent = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å';
                    } else {
                        e.target.classList.remove('border-red-500');
                        e.target.classList.add('border-slate-300');
                        
                        // –£–±–∏—Ä–∞–µ–º –æ—à–∏–±–∫—É
                        const errorDiv = e.target.parentNode.querySelector('.email-error');
                        if (errorDiv) {
                            errorDiv.remove();
                        }
                    }
                });
                
                emailInput.addEventListener('input', function(e) {
                    if (e.target.classList.contains('border-red-500')) {
                        e.target.classList.remove('border-red-500');
                        e.target.classList.add('border-slate-300');
                        
                        const errorDiv = e.target.parentNode.querySelector('.email-error');
                        if (errorDiv) {
                            errorDiv.remove();
                        }
                    }
                });
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            document.addEventListener('DOMContentLoaded', function() {
                initPhoneMask();
                initEmailValidation();
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —Ä–µ–∑—é–º–µ
                const resumeInput = document.getElementById('resume');
                if (resumeInput) {
                    resumeInput.addEventListener('change', function(e) {
                        const file = e.target.files[0];
                        if (file) {
                            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5MB)
                            if (file.size > 5 * 1024 * 1024) {
                                alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB');
                                this.value = '';
                                return;
                            }
                            
                            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
                            const allowedTypes = ['.pdf', '.doc', '.docx', '.txt'];
                            const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                            if (!allowedTypes.includes(fileExtension)) {
                                alert('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: PDF, DOC, DOCX, TXT');
                                this.value = '';
                                return;
                            }
                            
                            // –û–±–Ω–æ–≤–ª—è–µ–º UI
                            const labelElement = document.getElementById('resumeLabel');
                            const iconElement = document.getElementById('resumeIcon');
                            if (labelElement && iconElement) {
                                labelElement.textContent = file.name;
                                iconElement.className = 'w-6 h-6 text-green-500';
                            }
                        }
                    });
                }
            });
            
            document.getElementById('contactForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                const submitBtn = document.getElementById('submitBtn');
                const statusDiv = document.getElementById('status');
                
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
                const formData = new FormData(this);
                const dataFromForm = {
                    'name': formData.get('name'),
                    'phone': formData.get('phone'),
                    'telegram': formData.get('telegram') || '–ù–µ —É–∫–∞–∑–∞–Ω',
                    'citizenship': formData.get('citizenship'),
                    'experience': formData.get('experience') || '–ù–µ —É–∫–∞–∑–∞–Ω',
                    'email': formData.get('email') || '–ù–µ —É–∫–∞–∑–∞–Ω',
                    'comment': formData.get('comment') || '–ù–µ —É–∫–∞–∑–∞–Ω'
                };
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
                submitBtn.disabled = true;
                submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
                statusDiv.style.display = 'block';
                statusDiv.className = 'status loading p-4 rounded-xl text-center font-medium bg-blue-50 text-blue-700';
                statusDiv.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...';
                
                // –°–æ–∑–¥–∞–µ–º URLSearchParams –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                const postData = new URLSearchParams();
                for (const key in dataFromForm) {
                    if (Object.hasOwnProperty.call(dataFromForm, key)) {
                        postData.append(key, dataFromForm[key]);
                    }
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ
                const resumeInput = document.getElementById('resume') as HTMLInputElement;
                if (resumeInput && resumeInput.files && resumeInput.files[0]) {
                    const resumeFile = resumeInput.files[0];
                    postData.append('resume_file', resumeFile.name);
                    postData.append('resume_size', Math.round(resumeFile.size / 1024) + 'KB');
                }
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ axios
                axios.post(webhookUrl, postData.toString(), {
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
                })
                .then(response => {
                    console.log('Webhook response (success):', response.data);
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å
                    statusDiv.className = 'status success p-4 rounded-xl text-center font-medium bg-green-50 text-green-700';
                    statusDiv.textContent = '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.';
                    
                    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                    document.getElementById('contactForm').reset();
                })
                .catch(error => {
                    console.error('Error sending data to webhook:', error);
                    
                    let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö';
                    
                    if (error.response) {
                        // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –æ—à–∏–±–∫–æ–π
                        errorMessage += \`: \${error.response.status} \${error.response.statusText}\`;
                        if (error.response.data) {
                            console.log('Response data:', error.response.data);
                        }
                    } else if (error.request) {
                        // –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω
                        errorMessage += ': –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞';
                    } else {
                        // –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
                        errorMessage += \`: \${error.message}\`;
                    }
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                    statusDiv.className = 'status error p-4 rounded-xl text-center font-medium bg-red-50 text-red-700';
                    statusDiv.textContent = errorMessage;
                })
                .finally(() => {
                    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                    submitBtn.disabled = false;
                    submitBtn.textContent = '–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è';
                    
                    // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                    setTimeout(() => {
                        statusDiv.style.display = 'none';
                    }, 5000);
                });
            });
          `
        }} />
      </main>
    </div>
  );
}
